// Code generated by wit-bindgen-go. DO NOT EDIT.

package callbacks

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "jcbhmr:hello/callbacks".
var Exports struct {
	// PString represents the caller-defined exports for resource "jcbhmr:hello/callbacks#P-string".
	PString struct {
		// Destructor represents the caller-defined, exported destructor for resource "P-string".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// FromHost represents the caller-defined, exported static function "from-host".
		//
		//	from-host: static func(f: host-P-string) -> P-string
		FromHost func(f HostPString) (result PString)

		// Call represents the caller-defined, exported method "call".
		//
		//	call: func(a: string)
		Call func(self cm.Rep, a string)
	}

	// PStringRString represents the caller-defined exports for resource "jcbhmr:hello/callbacks#P-string-R-string".
	PStringRString struct {
		// Destructor represents the caller-defined, exported destructor for resource "P-string-R-string".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// ExportFromHost represents the caller-defined, exported static function "from-host".
		//
		//	from-host: static func(f: host-P-string-R-string) -> P-string-R-string
		ExportFromHost func(f HostPStringRString) (result PStringRString)

		// Call represents the caller-defined, exported method "call".
		//
		//	call: func(a: string) -> string
		Call func(self cm.Rep, a string) (result string)
	}

	// PAny represents the caller-defined exports for resource "jcbhmr:hello/callbacks#P-any".
	PAny struct {
		// Destructor represents the caller-defined, exported destructor for resource "P-any".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// ExportFromHost_ represents the caller-defined, exported static function "from-host".
		//
		//	from-host: static func(f: host-P-any) -> P-any
		ExportFromHost_ func(f HostPAny) (result PAny)

		// Call represents the caller-defined, exported method "call".
		//
		//	call: func(a: any)
		Call func(self cm.Rep, a Any)
	}
}
