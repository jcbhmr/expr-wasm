// Code generated by wit-bindgen-go. DO NOT EDIT.

package callbacks

import (
	"github.com/jcbhmr/expr-wasm/bindings/jcbhmr/hello/x"
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "jcbhmr:hello".

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-new]P-string
//go:noescape
func wasmimport_PStringResourceNew(rep0 uint32) (result0 uint32)

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-rep]P-string
//go:noescape
func wasmimport_PStringResourceRep(self0 uint32) (result0 uint32)

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-drop]P-string
//go:noescape
func wasmimport_PStringResourceDrop(self0 uint32)

//go:wasmexport jcbhmr:hello/callbacks#[dtor]P-string
//export jcbhmr:hello/callbacks#[dtor]P-string
func wasmexport_PStringDestructor(self0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	Exports.PString.Destructor(self)
	return
}

//go:wasmexport jcbhmr:hello/callbacks#[static]P-string.from-host
//export jcbhmr:hello/callbacks#[static]P-string.from-host
func wasmexport_FromHost(f0 uint32) (result0 uint32) {
	f := cm.Reinterpret[HostPString]((uint32)(f0))
	result := Exports.PString.FromHost(f)
	result0 = cm.Reinterpret[uint32](result)
	return
}

//go:wasmexport jcbhmr:hello/callbacks#[method]P-string.call
//export jcbhmr:hello/callbacks#[method]P-string.call
func wasmexport_PStringCall(self0 uint32, a0 *uint8, a1 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	a := cm.LiftString[string]((*uint8)(a0), (uint32)(a1))
	Exports.PString.Call(self, a)
	return
}

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-new]P-string-R-string
//go:noescape
func wasmimport_PStringRStringResourceNew(rep0 uint32) (result0 uint32)

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-rep]P-string-R-string
//go:noescape
func wasmimport_PStringRStringResourceRep(self0 uint32) (result0 uint32)

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-drop]P-string-R-string
//go:noescape
func wasmimport_PStringRStringResourceDrop(self0 uint32)

//go:wasmexport jcbhmr:hello/callbacks#[dtor]P-string-R-string
//export jcbhmr:hello/callbacks#[dtor]P-string-R-string
func wasmexport_PStringRStringDestructor(self0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	Exports.PStringRString.Destructor(self)
	return
}

//go:wasmexport jcbhmr:hello/callbacks#[static]P-string-R-string.from-host
//export jcbhmr:hello/callbacks#[static]P-string-R-string.from-host
func wasmexport_FromHost_(f0 uint32) (result0 uint32) {
	f := cm.Reinterpret[HostPStringRString]((uint32)(f0))
	result := Exports.PStringRString.ExportFromHost(f)
	result0 = cm.Reinterpret[uint32](result)
	return
}

//go:wasmexport jcbhmr:hello/callbacks#[method]P-string-R-string.call
//export jcbhmr:hello/callbacks#[method]P-string-R-string.call
func wasmexport_PStringRStringCall(self0 uint32, a0 *uint8, a1 uint32) (result *string) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	a := cm.LiftString[string]((*uint8)(a0), (uint32)(a1))
	result_ := Exports.PStringRString.Call(self, a)
	result = &result_
	return
}

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-new]P-any
//go:noescape
func wasmimport_PAnyResourceNew(rep0 uint32) (result0 uint32)

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-rep]P-any
//go:noescape
func wasmimport_PAnyResourceRep(self0 uint32) (result0 uint32)

//go:wasmimport [export]jcbhmr:hello/callbacks [resource-drop]P-any
//go:noescape
func wasmimport_PAnyResourceDrop(self0 uint32)

//go:wasmexport jcbhmr:hello/callbacks#[dtor]P-any
//export jcbhmr:hello/callbacks#[dtor]P-any
func wasmexport_PAnyDestructor(self0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	Exports.PAny.Destructor(self)
	return
}

//go:wasmexport jcbhmr:hello/callbacks#[static]P-any.from-host
//export jcbhmr:hello/callbacks#[static]P-any.from-host
func wasmexport_FromHost__(f0 uint32) (result0 uint32) {
	f := cm.Reinterpret[HostPAny]((uint32)(f0))
	result := Exports.PAny.ExportFromHost_(f)
	result0 = cm.Reinterpret[uint32](result)
	return
}

//go:wasmexport jcbhmr:hello/callbacks#[method]P-any.call
//export jcbhmr:hello/callbacks#[method]P-any.call
func wasmexport_PAnyCall(self0 uint32, a0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	a := (x.Any)((uint32)(a0))
	Exports.PAny.Call(self, a)
	return
}
