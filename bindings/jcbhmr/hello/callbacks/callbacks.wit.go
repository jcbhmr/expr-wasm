// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package callbacks represents the exported interface "jcbhmr:hello/callbacks".
package callbacks

import (
	callbackshost "github.com/jcbhmr/expr-wasm/bindings/jcbhmr/hello/callbacks-host"
	"github.com/jcbhmr/expr-wasm/bindings/jcbhmr/hello/x"
	"go.bytecodealliance.org/cm"
)

// Any represents the type alias "jcbhmr:hello/callbacks#any".
//
// See [x.Any] for more information.
type Any = x.Any

// HostPString represents the exported type alias "jcbhmr:hello/callbacks#host-P-string".
//
// See [callbackshost.PString] for more information.
type HostPString = callbackshost.PString

// HostPStringRString represents the exported type alias "jcbhmr:hello/callbacks#host-P-string-R-string".
//
// See [callbackshost.PStringRString] for more information.
type HostPStringRString = callbackshost.PStringRString

// HostPAny represents the exported type alias "jcbhmr:hello/callbacks#host-P-any".
//
// See [callbackshost.PAny] for more information.
type HostPAny = callbackshost.PAny

// PString represents the exported resource "jcbhmr:hello/callbacks#P-string".
//
//	resource P-string
type PString cm.Resource

// PStringResourceNew represents the imported resource-new for resource "P-string".
//
// Creates a new resource handle.
//
//go:nosplit
func PStringResourceNew(rep cm.Rep) (result PString) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_PStringResourceNew((uint32)(rep0))
	result = cm.Reinterpret[PString]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "P-string".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self PString) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_PStringResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "P-string".
//
// Drops a resource handle.
//
//go:nosplit
func (self PString) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PStringResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.PString.Destructor = func(self cm.Rep) {}
}

// PStringRString represents the exported resource "jcbhmr:hello/callbacks#P-string-R-string".
//
//	resource P-string-R-string
type PStringRString cm.Resource

// PStringRStringResourceNew represents the imported resource-new for resource "P-string-R-string".
//
// Creates a new resource handle.
//
//go:nosplit
func PStringRStringResourceNew(rep cm.Rep) (result PStringRString) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_PStringRStringResourceNew((uint32)(rep0))
	result = cm.Reinterpret[PStringRString]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "P-string-R-string".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self PStringRString) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_PStringRStringResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "P-string-R-string".
//
// Drops a resource handle.
//
//go:nosplit
func (self PStringRString) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PStringRStringResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.PStringRString.Destructor = func(self cm.Rep) {}
}

// PAny represents the exported resource "jcbhmr:hello/callbacks#P-any".
//
//	resource P-any
type PAny cm.Resource

// PAnyResourceNew represents the imported resource-new for resource "P-any".
//
// Creates a new resource handle.
//
//go:nosplit
func PAnyResourceNew(rep cm.Rep) (result PAny) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_PAnyResourceNew((uint32)(rep0))
	result = cm.Reinterpret[PAny]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "P-any".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self PAny) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_PAnyResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "P-any".
//
// Drops a resource handle.
//
//go:nosplit
func (self PAny) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PAnyResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.PAny.Destructor = func(self cm.Rep) {}
}
