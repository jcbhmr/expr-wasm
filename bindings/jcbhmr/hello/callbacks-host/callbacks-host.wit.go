// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package callbackshost represents the imported interface "jcbhmr:hello/callbacks-host".
package callbackshost

import (
	"github.com/jcbhmr/expr-wasm/bindings/jcbhmr/hello/x"
	"go.bytecodealliance.org/cm"
)

// Any represents the type alias "jcbhmr:hello/callbacks-host#any".
//
// See [x.Any] for more information.
type Any = x.Any

// PString represents the imported resource "jcbhmr:hello/callbacks-host#P-string".
//
//	resource P-string
type PString cm.Resource

// ResourceDrop represents the imported resource-drop for resource "P-string".
//
// Drops a resource handle.
//
//go:nosplit
func (self PString) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PStringResourceDrop((uint32)(self0))
	return
}

// Call represents the imported method "call".
//
//	call: func(a: string)
//
//go:nosplit
func (self PString) Call(a string) {
	self0 := cm.Reinterpret[uint32](self)
	a0, a1 := cm.LowerString(a)
	wasmimport_PStringCall((uint32)(self0), (*uint8)(a0), (uint32)(a1))
	return
}

// PStringRString represents the imported resource "jcbhmr:hello/callbacks-host#P-string-R-string".
//
//	resource P-string-R-string
type PStringRString cm.Resource

// ResourceDrop represents the imported resource-drop for resource "P-string-R-string".
//
// Drops a resource handle.
//
//go:nosplit
func (self PStringRString) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PStringRStringResourceDrop((uint32)(self0))
	return
}

// Call represents the imported method "call".
//
//	call: func(a: string) -> string
//
//go:nosplit
func (self PStringRString) Call(a string) (result string) {
	self0 := cm.Reinterpret[uint32](self)
	a0, a1 := cm.LowerString(a)
	wasmimport_PStringRStringCall((uint32)(self0), (*uint8)(a0), (uint32)(a1), &result)
	return
}

// PAny represents the imported resource "jcbhmr:hello/callbacks-host#P-any".
//
//	resource P-any
type PAny cm.Resource

// ResourceDrop represents the imported resource-drop for resource "P-any".
//
// Drops a resource handle.
//
//go:nosplit
func (self PAny) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PAnyResourceDrop((uint32)(self0))
	return
}

// Call represents the imported method "call".
//
//	call: func(a: any)
//
//go:nosplit
func (self PAny) Call(a Any) {
	self0 := cm.Reinterpret[uint32](self)
	a0 := (uint32)(a)
	wasmimport_PAnyCall((uint32)(self0), (uint32)(a0))
	return
}
